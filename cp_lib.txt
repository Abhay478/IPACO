main
entry: 
  %retval = alloca i32, align 4 --> %retval=TOP, 
  %a = alloca i32, align 4 --> %a=TOP, 
  %z = alloca i32, align 4 --> %z=TOP, 
  %y = alloca i32, align 4 --> %y=TOP, 
  store i32 0, i32* %retval, align 4 --> %retval=þ, 
  store i32 3, i32* %a, align 4 --> %a=þ, 
  store i32 5, i32* %z, align 4 --> %z=þ, 
  store i32 0, i32* %y, align 4 --> %y=þ, 
  br label %for.cond --> %for.cond=TOP, 
for.cond: 
  %0 = load i32, i32* %y, align 4 --> %y=BOTTOM, %0=BOTTOM, 
  %cmp = icmp slt i32 %0, 4 --> %0=BOTTOM, %cmp=BOTTOM, 
  br i1 %cmp, label %for.body, label %for.end --> %cmp=BOTTOM, %for.end=TOP, %for.body=TOP, 
for.body: 
  %1 = load i32, i32* %z, align 4 --> %z=BOTTOM, %1=BOTTOM, 
  %2 = load i32, i32* %a, align 4 --> %a=BOTTOM, %2=BOTTOM, 
  %add = add nsw i32 %1, %2 --> %1=BOTTOM, %2=BOTTOM, %add=BOTTOM, 
  store i32 %add, i32* %z, align 4 --> %add=BOTTOM, %z=BOTTOM, 
  br label %for.inc --> %for.inc=TOP, 
for.inc: 
  %3 = load i32, i32* %y, align 4 --> %y=BOTTOM, %3=BOTTOM, 
  %inc = add nsw i32 %3, 1 --> %3=BOTTOM, %inc=BOTTOM, 
  store i32 %inc, i32* %y, align 4 --> %inc=BOTTOM, %y=BOTTOM, 
  br label %for.cond, !llvm.loop !4 --> %for.cond=TOP, 
for.end: 
  %4 = load i32, i32* %z, align 4 --> %z=BOTTOM, %4=BOTTOM, 
  %call = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 noundef %4) --> =TOP, %4=BOTTOM, %printf=TOP, %call=TOP, 
  ret i32 0 --> 
